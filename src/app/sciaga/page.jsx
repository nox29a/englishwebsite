import React from "react";
import { Card, CardContent } from "@/components/ui/card";

const times = [
  {
    name: "Present Simple",
    explanation:
      "U≈ºywamy, gdy m√≥wimy o czym≈õ, co dzieje siƒô zawsze lub regularnie.",
    example: "I eat breakfast every day.",
    hints: ["every day", "always", "usually", "often", "never"]
  },
  {
    name: "Present Continuous",
    explanation:
      "U≈ºywamy, gdy co≈õ dzieje siƒô teraz.",
    example: "I am eating breakfast (w≈Ça≈õnie teraz).",
    hints: ["now", "at the moment", "currently"]
  },
  {
    name: "Past Simple",
    explanation:
      "U≈ºywamy, gdy co≈õ wydarzy≈Ço siƒô w przesz≈Ço≈õci i ju≈º siƒô sko≈Ñczy≈Ço.",
    example: "I ate breakfast yesterday.",
    hints: ["yesterday", "last week", "in 2000"]
  },
  {
    name: "Past Continuous",
    explanation:
      "U≈ºywamy, gdy co≈õ trwa≈Ço przez pewien czas w przesz≈Ço≈õci.",
    example: "I was eating when you called.",
    hints: ["while", "when"]
  },
  {
    name: "Present Perfect",
    explanation:
      "U≈ºywamy, gdy co≈õ siƒô wydarzy≈Ço i ma to wp≈Çyw na teraz.",
    example: "I have eaten (teraz nie jestem g≈Çodny).",
    hints: ["just", "already", "yet", "ever", "never"]
  },
  {
    name: "Past Perfect",
    explanation:
      "U≈ºywamy, gdy co≈õ wydarzy≈Ço siƒô przed czym≈õ innym w przesz≈Ço≈õci.",
    example: "I had eaten before she arrived.",
    hints: ["before", "after", "by the time"]
  },
  {
    name: "Future Simple",
    explanation:
      "U≈ºywamy, gdy co≈õ wydarzy siƒô w przysz≈Ço≈õci.",
    example: "I will eat breakfast tomorrow.",
    hints: ["tomorrow", "next week", "in 2025"]
  },
  {
    name: "Future Continuous",
    explanation:
      "U≈ºywamy, gdy co≈õ bƒôdzie siƒô dzia≈Ço w okre≈õlonym momencie w przysz≈Ço≈õci.",
    example: "I will be eating at 8am.",
    hints: ["at this time tomorrow", "when you arrive"]
  },
  {
    name: "Future Perfect",
    explanation:
      "U≈ºywamy, gdy co≈õ wydarzy siƒô i zako≈Ñczy przed jakim≈õ momentem w przysz≈Ço≈õci.",
    example: "I will have eaten before 9am.",
    hints: ["by", "by the time"]
  },
  {
    name: "Future Perfect Continuous",
    explanation:
      "U≈ºywamy, gdy co≈õ bƒôdzie trwa≈Ço a≈º do jakiego≈õ momentu w przysz≈Ço≈õci.",
    example: "I will have been eating for an hour by 9am.",
    hints: ["for", "by"]
  },
];

const extraSections = [
  {
    name: "Zero Conditional",
    explanation:
      "Prawdy og√≥lne ‚Äì je≈õli co≈õ siƒô wydarzy, zawsze ma ten sam rezultat.",
    example: "If you heat water to 100¬∞C, it boils.",
    hints: ["if + Present Simple", "czasowniki w czasie tera≈∫niejszym"]
  },
  {
    name: "First Conditional",
    explanation:
      "Prawdopodobna przysz≈Ço≈õƒá ‚Äì co≈õ mo≈ºe siƒô wydarzyƒá, je≈õli spe≈Çni siƒô warunek.",
    example: "If it rains, I will stay home.",
    hints: ["if + Present Simple", "will + czasownik"]
  },
  {
    name: "Second Conditional",
    explanation:
      "Ma≈Ço prawdopodobne lub nierealne sytuacje w tera≈∫niejszo≈õci/przysz≈Ço≈õci.",
    example: "If I were you, I would go.",
    hints: ["if + Past Simple", "would + czasownik"]
  },
  {
    name: "Third Conditional",
    explanation:
      "Co≈õ, co siƒô nie wydarzy≈Ço w przesz≈Ço≈õci i jakie by≈Çyby tego skutki.",
    example: "If I had studied, I would have passed.",
    hints: ["if + Past Perfect", "would have + III forma"]
  },
  {
    name: "Strona bierna (Passive Voice)",
    explanation:
      "U≈ºywana, gdy wa≈ºniejsze jest to, co siƒô sta≈Ço, ni≈º kto to zrobi≈Ç.",
    example: "The cake was eaten by Tom.",
    hints: ["to be + III forma czasownika"]
  },
  {
    name: "Mowa zale≈ºna (Reported Speech)",
    explanation:
      "Opisujemy, co kto≈õ powiedzia≈Ç, nie cytujƒÖc go bezpo≈õrednio.",
    example: "She said (that) she was tired.",
    hints: ["czas cofamy o jeden (np. Present Simple ‚Üí Past Simple)"]
  },
];

export default function SciagaPage() {
  return (
    <div className="min-h-screen bg-gray-950 text-white p-6">
      <h1 className="text-3xl md:text-4xl text-indigo-300 font-bold text-center mb-2">
        ≈öciƒÖga z angielskiego üìò
      </h1>
      <h2 className="text-xl md:text-2xl text-indigo-400 text-center mb-10">
        Czasy
      </h2>

      <div className="flex flex-col gap-6 max-w-3xl mx-auto mb-16">
        {times.map((time) => (
          <Card
            key={time.name}
            className="bg-indigo-600 border border-indigo-500 rounded-xl p-4 w-full"
          >
            <CardContent>
              <h2 className="text-xl text-white font-semibold mb-2">{time.name}</h2>
              <p className="text-white text-sm leading-relaxed mb-4">
                {time.explanation}
              </p>
              <Card className="bg-indigo-800 border border-indigo-700 rounded-lg p-3 mb-2">
                <CardContent>
                  <p className="text-indigo-100 text-sm">
                    <strong>Przyk≈Çad:</strong> {time.example}
                  </p>
                </CardContent>
              </Card>
              {time.hints && (
                <ul className="list-disc pl-6 text-indigo-100 text-sm">
                  {time.hints.map((hint, idx) => (
                    <li key={idx}>{hint}</li>
                  ))}
                </ul>
              )}
            </CardContent>
          </Card>
        ))}
      </div>

      <h2 className="text-xl md:text-2xl text-indigo-400 text-center mb-10">
        Inne wa≈ºne rzeczy
      </h2>

      <div className="flex flex-col gap-6 max-w-3xl mx-auto">
        {extraSections.map((section) => (
          <Card
            key={section.name}
            className="bg-indigo-600 border border-indigo-500 rounded-xl p-4 w-full"
          >
            <CardContent>
              <h2 className="text-xl text-white font-semibold mb-2">{section.name}</h2>
              <p className="text-white text-sm leading-relaxed mb-4">
                {section.explanation}
              </p>
              <Card className="bg-indigo-800 border border-indigo-700 rounded-lg p-3 mb-2">
                <CardContent>
                  <p className="text-indigo-100 text-sm">
                    <strong>Przyk≈Çad:</strong> {section.example}
                  </p>
                </CardContent>
              </Card>
              {section.hints && (
                <ul className="list-disc pl-6 text-indigo-100 text-sm">
                  {section.hints.map((hint, idx) => (
                    <li key={idx}>{hint}</li>
                  ))}
                </ul>
              )}
            </CardContent>
          </Card>
        ))}
      </div>
    </div>
  );
}
